name: Daily Docker Image Build and Push

on:
  # Run automatically every day at 02:00 UTC
  schedule:
    - cron: '0 2 * * *'
  # Allow manual runs from the GitHub Actions "Run workflow" button
  workflow_dispatch:

jobs:
  # JOB 1: Determine which images, if any, need to be built.
  determine-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python for discovery script
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies for discovery script
        run: pip install requests beautifulsoup4

      - name: Determine latest versions and generate build matrix
        id: set-matrix
        run: echo "matrix=$(python src/get_latest_versions.py)" >> $GITHUB_OUTPUT

  # JOB 2: Build and push only the images that were selected by the job above.
  build-and-push:
    # This 'needs' key establishes the dependency on the first job.
    needs: determine-matrix
    # Only run this job if the matrix from the previous job is not empty.
    if: fromJson(needs.determine-matrix.outputs.matrix).include[0] != null
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.determine-matrix.outputs.matrix) }}

    env:
      UBUNTU_VERSION: ${{ matrix.ubuntu_version }}
      PYTHON_VERSION: ${{ matrix.python_version }}
      OPENSSL_VERSION: ${{ matrix.openssl_version }}
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get Ubuntu adjective for tagging
        id: adjective
        run: echo "name=$(bash src/ubuntu_adjective.sh --ubuntu=${UBUNTU_VERSION})" >> $GITHUB_OUTPUT

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Check if image already exists and set build flag
        id: check-image
        run: |
          IMAGE_NAME="${DOCKERHUB_USERNAME}/${{ steps.adjective.outputs.name }}-python:${PYTHON_VERSION}"
          echo "Checking for image: ${IMAGE_NAME}"
          # The 'docker manifest inspect' command will exit with a non-zero status if the image does not exist.
          if docker manifest inspect "${IMAGE_NAME}" > /dev/null; then
            echo "Image already exists. No build needed."
            echo "build_needed=false" >> $GITHUB_OUTPUT
          else
            echo "Image does not exist. Build is required."
            echo "build_needed=true" >> $GITHUB_OUTPUT
          fi

      - name: Build and Push Docker Image
        if: steps.check-image.outputs.build_needed == 'true'
        run: |
          bash src/build_image.sh
          IMAGE_NAME="${DOCKERHUB_USERNAME}/${{ steps.adjective.outputs.name }}-python"
          docker push "${IMAGE_NAME}:${PYTHON_VERSION}"
          MAJOR_MINOR=$(echo "${PYTHON_VERSION}" | cut -d. -f1,2)
          docker tag "${IMAGE_NAME}:${PYTHON_VERSION}" "${IMAGE_NAME}:${MAJOR_MINOR}"
          docker push "${IMAGE_NAME}:${MAJOR_MINOR}"

      - name: Test the image
        if: steps.check-image.outputs.build_needed == 'true'
        run: bash src/test_image.sh
